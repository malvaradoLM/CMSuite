<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>